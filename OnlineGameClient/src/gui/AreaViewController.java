/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AreaViewController.java
 *
 * Created on Oct 26, 2011, 10:25:12 PM
 */
package gui;

import images.ImageLoader;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JPanel;
import network.Message;

/**
 *
 * @author Warkst
 */
public class AreaViewController extends javax.swing.JPanel implements ViewController {

    private GUIMaster master;

    /** Creates new form AreaViewController */
    public AreaViewController(GUIMaster master) {
	this.master = master;

	initComponents();

//	setBounds(0, 0, master.getGameFrame().getBounds().width, master.getGameFrame().getBounds().height);

//	setSize(master.getGameFrame().getBounds().width, master.getGameFrame().getBounds().height);
	setPreferredSize(new Dimension(master.getGameFrame().getBounds().width, master.getGameFrame().getBounds().height));
//	setMinimumSize(Size(master.getGameFrame().getBounds().width, master.getGameFrame().getBounds().height);
//	setMaximumSize(master.getGameFrame().getBounds().width, master.getGameFrame().getBounds().height);

	textAreaReadChat.append("Welcome to Online Game Client, " + master.getActiveUser() + "!");

	initListeners();
		
	panelAreaView.setBackgroundImage(ImageLoader.createImageIconAtHomeLocation("background_main.jpg"));

	panelEscMenu.setVisible(false);

	panelAreaView.setFocusable(true);
	panelAreaView.requestFocusInWindow();
	panelAreaView.requestFocus();
    }

    private void initListeners() {
	panelAreaView.addKeyListener(new KeyListener() {

	    public void keyTyped(KeyEvent e) {
	    }

	    public void keyPressed(KeyEvent e) {
//		System.out.println("Registering keyevent for world panel");
		switch (e.getKeyCode()) {
		    case KeyEvent.VK_ENTER:
			textFieldTypeChat.requestFocusInWindow();
			break;
		    case KeyEvent.VK_ESCAPE:
			panelEscMenu.setVisible(true);
			panelEscMenu.requestFocusInWindow();
			break;
		    default:
			break;
		}
	    }

	    public void keyReleased(KeyEvent e) {
	    }
	});

	panelEscMenu.addKeyListener(new KeyListener() {

	    public void keyTyped(KeyEvent e) {
	    }

	    public void keyPressed(KeyEvent e) {
//		System.out.println("Registering keyevent for menu panel");
		if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
		    panelEscMenu.setVisible(false);
		    panelAreaView.requestFocusInWindow();
		}
	    }

	    public void keyReleased(KeyEvent e) {
	    }
	});

	textFieldTypeChat.addKeyListener(new KeyListener() {

	    public void keyTyped(KeyEvent e) {
	    }

	    public void keyPressed(KeyEvent e) {
//		System.out.println("Registering keyevent for text field");
		if (e.getKeyCode() == KeyEvent.VK_ENTER) {
		    sendChat();
		} else if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
		    // clear text in type window
//		    textFieldTypeChat.setText("");
		    panelAreaView.requestFocusInWindow();
		}
	    }

	    public void keyReleased(KeyEvent e) {
	    }
	});
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelEscMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttonExit = new javax.swing.JButton();
        buttonBackground = new javax.swing.JButton();
        buttonResume = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        chatPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaReadChat = new javax.swing.JTextArea();
        textFieldTypeChat = new javax.swing.JTextField();
        buttonSendChat = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 1440, 880));
        setPreferredSize(new java.awt.Dimension(1440, 880));

        jLayeredPane1.setBounds(new java.awt.Rectangle(0, 0, 1440, 880));
        jLayeredPane1.setMaximumSize(new java.awt.Dimension(1440, 880));

        panelEscMenu.setBackground(new java.awt.Color(204, 255, 204));
        panelEscMenu.setMaximumSize(new java.awt.Dimension(200, 400));
        panelEscMenu.setPreferredSize(new java.awt.Dimension(200, 400));
        panelEscMenu.setSize(new java.awt.Dimension(200, 400));

        jLabel1.setText("Game Menu");
        jLabel1.setFocusable(false);

        buttonExit.setText("Exit");
        buttonExit.setFocusable(false);
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        buttonBackground.setText("Background");
        buttonBackground.setFocusable(false);
        buttonBackground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackgroundActionPerformed(evt);
            }
        });

        buttonResume.setText("Resume");
        buttonResume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buttonResume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResumeActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelEscMenuLayout = new org.jdesktop.layout.GroupLayout(panelEscMenu);
        panelEscMenu.setLayout(panelEscMenuLayout);
        panelEscMenuLayout.setHorizontalGroup(
            panelEscMenuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelEscMenuLayout.createSequentialGroup()
                .add(45, 45, 45)
                .add(panelEscMenuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(buttonBackground)
                    .add(panelEscMenuLayout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jLabel1)))
                .addContainerGap(37, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, panelEscMenuLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .add(buttonExit)
                .add(59, 59, 59))
            .add(panelEscMenuLayout.createSequentialGroup()
                .add(54, 54, 54)
                .add(buttonResume)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        panelEscMenuLayout.setVerticalGroup(
            panelEscMenuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, panelEscMenuLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(buttonResume)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 224, Short.MAX_VALUE)
                .add(buttonBackground)
                .add(18, 18, 18)
                .add(buttonExit)
                .addContainerGap())
        );

        panelEscMenu.setBounds(600, 100, 200, 400);
        jLayeredPane1.add(panelEscMenu, javax.swing.JLayeredPane.POPUP_LAYER);

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(600, 245));

        chatPanel.setFocusable(false);
        chatPanel.setPreferredSize(new java.awt.Dimension(600, 207));
        chatPanel.setSize(new java.awt.Dimension(600, 207));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setFocusable(false);

        textAreaReadChat.setColumns(20);
        textAreaReadChat.setEditable(false);
        textAreaReadChat.setLineWrap(true);
        textAreaReadChat.setRows(5);
        textAreaReadChat.setWrapStyleWord(true);
        textAreaReadChat.setFocusable(false);
        textAreaReadChat.setOpaque(false);
        textAreaReadChat.setPreferredSize(new java.awt.Dimension(600, 80));
        textAreaReadChat.setSize(new java.awt.Dimension(600, 80));
        jScrollPane1.setViewportView(textAreaReadChat);

        buttonSendChat.setText("Send");
        buttonSendChat.setBounds(new java.awt.Rectangle(0, 0, 97, 29));
        buttonSendChat.setFocusable(false);
        buttonSendChat.setMargin(new java.awt.Insets(0, 0, 0, 0));
        buttonSendChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendChatActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout chatPanelLayout = new org.jdesktop.layout.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, chatPanelLayout.createSequentialGroup()
                .add(textFieldTypeChat, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(buttonSendChat))
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, chatPanelLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textFieldTypeChat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(buttonSendChat)))
        );

        jTabbedPane1.addTab("General", chatPanel);

        jTabbedPane1.setBounds(10, 600, 580, 245);
        jLayeredPane1.add(jTabbedPane1, javax.swing.JLayeredPane.PALETTE_LAYER);

        panelAreaView.setBackground(new java.awt.Color(102, 204, 255));
        panelAreaView.setForeground(new java.awt.Color(102, 255, 102));
        panelAreaView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panelAreaView.setMaximumSize(new java.awt.Dimension(1440, 880));

        org.jdesktop.layout.GroupLayout panelAreaViewLayout = new org.jdesktop.layout.GroupLayout(panelAreaView);
        panelAreaView.setLayout(panelAreaViewLayout);
        panelAreaViewLayout.setHorizontalGroup(
            panelAreaViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1440, Short.MAX_VALUE)
        );
        panelAreaViewLayout.setVerticalGroup(
            panelAreaViewLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 880, Short.MAX_VALUE)
        );

        panelAreaView.setBounds(0, 0, 1440, 880);
        jLayeredPane1.add(panelAreaView, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1440, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 880, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendChat() {
	if (textFieldTypeChat.getText().length() > 1) {
	    //send message
	    Message chat = new Message(Message.MSGTYPE_CHAT);
	    chat.putArgument(Message.STR_CHATTEXT, textFieldTypeChat.getText());
	    chat.putArgument(Message.STR_CHARACTERNAME, master.getActiveCharacter().getName());

	    master.dispatchUplinkMessage(chat);

	    textFieldTypeChat.setText("");
	}
	// transfer focus even if nothing was sent
	panelAreaView.requestFocusInWindow();
    }

    private void buttonSendChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendChatActionPerformed
	sendChat();
    }//GEN-LAST:event_buttonSendChatActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
	master.shutdown();
    }//GEN-LAST:event_buttonExitActionPerformed

private void buttonBackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackgroundActionPerformed
    panelAreaView.setBackgroundImage(ImageLoader.createImageIconAtHomeLocation("parchment.jpg"));
}//GEN-LAST:event_buttonBackgroundActionPerformed

private void buttonResumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResumeActionPerformed
    panelEscMenu.setVisible(false);
    panelAreaView.requestFocusInWindow();
}//GEN-LAST:event_buttonResumeActionPerformed

    public JPanel getView() {
	return this;
    }

    public void appendMessageToChat(String sender, String message) {
	textAreaReadChat.append("\n" + sender + ": " + message);
    }

    public void appendMessageToChat(String message) {
	textAreaReadChat.append("\n> " + message);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBackground;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonResume;
    private javax.swing.JButton buttonSendChat;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private final images.ImagePanelBean panelAreaView = new images.ImagePanelBean();
    private javax.swing.JPanel panelEscMenu;
    private javax.swing.JTextArea textAreaReadChat;
    private javax.swing.JTextField textFieldTypeChat;
    // End of variables declaration//GEN-END:variables

    public void electFirstResponder() {
	panelAreaView.requestFocus();
    }

    public void handleMessage(Message message) {
	// handle it
	switch (message.getType()) {
	    case Message.MSGTYPE_CHAT:
		appendMessageToChat((String) message.getArgumentForKey(Message.STR_CHARACTERNAME),
			(String) message.getArgumentForKey(Message.STR_CHATTEXT));
		break;
	    case Message.MSGTYPE_ANNOUNCE:
		appendMessageToChat((String) message.getArgumentForKey(Message.STR_ANNOUNCETEXT));
		break;
	    default:
		break;
	}
    }
}
